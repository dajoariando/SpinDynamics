function [data,parameter] = readbrukerfile(dirname,expno)% function [data,parameter] = readbrukerfile(dirname,expno)% read bruker parameter files: acqu and acqu2 to determine data size.% return data in complex form, and parameters.	data = [];	parameter = [];if length (expno) > 1	fprintf(1,'This routine reads only one data set. Please.');	returnend%Open the parameter file.filename = [dirname filesep num2str(expno) filesep 'acqu'];[fid,fmessage] = fopen(filename,'r');if (fid == -1) fprintf(1, 'Error opening file %s. Does it exist ??\n', filename); 	fprintf(1,fmessage);    return; end;%Read the header and get info about echo-spacing, number of wait times and number of echoes%read 1 kB[header, COUNT]  = fread(fid,inf,'uchar');fclose(fid);line = char(header)';k = findstr(line, '##TITLE= Parameter file, XWIN-NMR');k1 = findstr(line, '##TITLE= Parameter file, TOPSPIN');dataformat = 0; %default xwin-nmrif(isempty(k) && isempty(k1))	fprintf(1,'This file is not in Bruker xwin-nmr 2.5 or topspin format.\n');	return;else    if (~isempty(k))        fprintf(1,'%s is in Bruker xw2.5 format and the parameters will be read.\n', [dirname ':' num2str(expno)]);        dataformat = 0; %xwin-nmr        [data,parameter] = readXWINNMRfile(dirname,expno);    else      fprintf(1,'%s is in Bruker TOPSPIN format and the parameters will be read.\n', [dirname ':' num2str(expno)]);        dataformat = 1; %topspin        [data,parameter] = readTOPSPINfile(dirname,expno);    endendfunction [data,parameter] = readXWINNMRfile(dirname,expno)	data = [];	parameter = [];if length (expno) > 1	fprintf(1,'This routine reads only one data set. Please.');	returnend%Open the parameter file.filename = [dirname filesep num2str(expno) filesep 'acqu'];fid = fopen(filename,'r');if (fid == -1) fprintf(1, 'Error opening file %s. Does it exist ??\n', filename); 	return; end;%Read the header and get info about echo-spacing, number of wait times and number of echoes%read 1 kB[header, COUNT]  = fread(fid,inf,'uchar');fclose(fid);line = char(header)';k = findstr(line, '##TITLE= Parameter file, XWIN-NMR');k1 = findstr(line, '##TITLE= Parameter file, TOPSPIN');dataformat = 0; %default xwin-nmrif(isempty(k) && isempty(k1))	fprintf(1,'This file is not in Bruker xwin-nmr 2.5 or topspin format.\n');	return;else    if (~isempty(k))        fprintf(1,'%s is in Bruker xw2.5 format and the parameters will be read.\n', [dirname ':' num2str(expno)]);        dataformat = 0; %xwin-nmr    else      fprintf(1,'%s is in Bruker TOPSPIN format and the parameters will be read.\n', [dirname ':' num2str(expno)]);        dataformat = 1; %topspin    endend	fprintf(1, 'Parsing acqu ...'); 	fprintf(1,'.TD.NBL.SW.BF1.D.P.CNST.');    %%%%%%%%%%%%%% parameters	% Find td	td = GetToken(line,'##$TD=',1);	nbl= GetToken(line,'##$NBL=',1);	   % Find ns            ns = GetToken(line,'##$NS=',1);   % Find sw	sw = GetToken(line,'##$SW_h=',1);    if sw ~= 0		dw = 1./ sw;	 end 	% Find bf1	bf1 = GetToken(line,'##$BF1=',1);	o1  = GetToken(line,'##$O1=',1);	   % Find cnst's       constants= GetToken(line,'##$CNST= (0..31)',32);    % Find D's	delays = GetToken(line,'##$D= (0..31)',32);    % Find P's	pulses = GetToken(line,'##$P= (0..31)',32);    % power levels    pl      = GetToken(line,'##$PL= (0..31)',32);        % loop counter levels    l      = GetToken(line,'##$L= (0..31)',32);            % gradients, gpx,gpy, gpz    gpx     = GetToken(line,'##$GPX= (0..31)',32);    gpy     = GetToken(line,'##$GPY= (0..31)',32);    gpz     = GetToken(line,'##$GPZ= (0..31)',32);  	%%%%%% read acqu2 for td1	filename = [dirname filesep num2str(expno) filesep 'acqu2'];	fid = fopen(filename,'r');	if (fid == -1)  		td1 = 1;	else				header = []; 		line = [];		[header, COUNT]  = fread(fid,inf,'uchar');		fclose(fid);				line = char(header)';		k = findstr(line, '##TITLE= Parameter file, XWIN-NMR');		if(isempty(k))			fprintf(1,'This file is not in Bruker xwin-nmr 2.5 format.\n');			return;		else			fprintf(1, ' acqu2.');				   % Find td		   td1 = GetToken(line,'##$TD=',1);	    	fprintf(1,'.TD1.');		end    end    %%%%%% read acqu3 for td2	filename = [dirname filesep num2str(expno) filesep 'acqu3'];	 fid = fopen(filename,'r');	if (fid == -1)  		td2 = 1;	else				header = []; 		line = [];		[header, COUNT]  = fread(fid,inf,'uchar');		fclose(fid);				line = char(header)';		k = findstr(line, '##TITLE= Parameter file, TOPSPIN');		if(isempty(k))			fprintf(1,'This file is not in Bruker TOPSPIN format.\n');			return;		else			fprintf(1, ' acqu2.');				   % Find td		   td2 = GetToken(line,'##$TD=',1);	    	fprintf(1,'.TD2.');		end 	end 	%%%%%% read pulseprogram	filename = [dirname filesep num2str(expno) filesep 'pulseprogram'];	 fid = fopen(filename,'r');	if fid == -1		fprint(1,'no pulseprogram file');		ppg = '';	else		ppg = fgetl(fid);		ppg = ppg(6:end-1);		%[ppgpath ppg] = fileparts(ppg);		fclose(fid);	end	    % extra files of parameters	fid = fopen([dirname filesep num2str(expno) filesep 'vdlist'],'r');	if (fid == -1)  		vd = [];	else				fclose(fid);		curdirname = pwd;		cd ([dirname filesep num2str(expno) filesep]);		vd = load( 'vdlist','-ascii');		fprintf(1,'.vd.');		cd (curdirname);			end	fid = fopen([dirname filesep num2str(expno) filesep 'vplist'],'r');	if (fid == -1)  		vp = [];	else				fclose(fid);				curdirname = pwd;		cd ([dirname filesep num2str(expno) filesep]);		vp = load( 'vplist','-ascii');		fprintf(1,'.vp.');		cd (curdirname);	end    	fid = fopen([dirname filesep num2str(expno) filesep 'difflist'],'r');	if (fid == -1)  		difflist = [];	else				fclose(fid);				curdirname = pwd;		cd ([dirname filesep num2str(expno) filesep]);		difflist = load( 'difflist','-ascii');		fprintf(1,'.difflist.');		cd (curdirname);	end	                	% read the title file, if exist	fid = fopen([dirname filesep num2str(expno) filesep 'pdata' filesep '1' filesep 'title'],'r');	if (fid == -1)  		ftitle = [];	else				ftitle = fgetl(fid);		fclose(fid);	end		 %%%% read data binary file %%%% 	if td1 == 1		filename = [dirname filesep num2str(expno) filesep 'fid'];	%% 1d data	else		filename = [dirname filesep num2str(expno) filesep 'ser']; %% 2d data    end    if dataformat == 0  %unix        fid = fopen(filename,'r','b');	%data is always in big endian order.    else        if dataformat == 1        fid = fopen(filename,'r','l'); %little endian, linux, topspin        else        fprintf(1, 'Unknown data format: not xwin-nmr or topspin.');        return;        end    end    	if (fid == -1) fprintf(1, 'Error opening binary data file %s. Does it exist ??\n', filename);		fprintf(1, 'Exit with the output parameters set to empty.\n', filename); 		return; 		end;		 	fprintf(1,'.DATA.');	%filename	[A,COUNT] = fread(fid,inf,'int32');	% long interger	%COUNT    fclose(fid);    	data = [];	data = A(1:2:end-1) + 1i*A(2:2:end);	%td	%td1	data = reshape (data,td/2,td1,td2);    % data = reshape (data,length(A)/2,td1,td2);		if nargout > 1		parameter.bf1 = bf1;		parameter.o1  = o1;		parameter.nbl = nbl;		parameter.ns = ns;		parameter.td = td;		parameter.td1 = td1;        parameter.td2 = td2;		parameter.dw = dw;		parameter.cnst = constants;		parameter.pulses = pulses;		parameter.delays = delays;        parameter.pl = pl;        parameter.gp = [gpx gpy gpz];		parameter.vd = vd;		parameter.vp = vp;		parameter.ppg  = ppg;		parameter.title = ftitle;		parameter.l = l;        parameter.difflist = difflist;	end	fprintf(1,'\n')%end   return%%%%%%%%%%%%function [data,parameter] = readTOPSPINfile(dirname,expno)	data = [];	parameter = [];if length (expno) > 1	fprintf(1,'This routine reads only one data set. Please.');	returnend%Open the parameter file.filename = [dirname filesep num2str(expno) filesep 'acqu'];fid = fopen(filename,'r');if (fid == -1) fprintf(1, 'Error opening file %s. Does it exist ??\n', filename); 	return; end;%Read the header and get info about echo-spacing, number of wait times and number of echoes%read 1 kB[header, COUNT]  = fread(fid,inf,'uchar');fclose(fid);line = char(header)';k = findstr(line, '##TITLE= Parameter file, XWIN-NMR');k1 = findstr(line, '##TITLE= Parameter file, TOPSPIN');dataformat = 0; %default xwin-nmrif(isempty(k) && isempty(k1))	fprintf(1,'This file is not in Bruker xwin-nmr 2.5 or topspin format.\n');	return;else    if (~isempty(k))        fprintf(1,'%s is in Bruker xw2.5 format and the parameters will be read.\n', [dirname ':' num2str(expno)]);        dataformat = 0; %xwin-nmr    else      fprintf(1,'%s is in Bruker TOPSPIN format and the parameters will be read.\n', [dirname ':' num2str(expno)]);        dataformat = 1; %topspin    endend	fprintf(1, 'Parsing acqu ...'); 	fprintf(1,'.TD.NBL.SW.BF1.D.P.CNST.');    %%%%%%%%%%%%%% parameters	% Find td	td = GetToken(line,'##$TD=',1);	nbl= GetToken(line,'##$NBL=',1);	   % Find ns            ns = GetToken(line,'##$NS=',1);   % Find sw	sw = GetToken(line,'##$SW_h=',1);    if sw ~= 0		dw = 1./ sw;	 end 	 % Find bf1	bf1 = GetToken(line,'##$BF1=',1);	o1  = GetToken(line,'##$O1=',1);	   % Find cnst's       constants= GetToken(line,'##$CNST= (0..63)',64);    % Find D's	delays = GetToken(line,'##$D= (0..63)',64);    % Find P's	pulses = GetToken(line,'##$P= (0..63)',64);    % power levels    pl      = GetToken(line,'##$PL= (0..63)',64);        % loop counter levels    l      = GetToken(line,'##$L= (0..31)',32);            % gradients, gpx,gpy, gpz    gpx     = GetToken(line,'##$GPX= (0..31)',32);    gpy     = GetToken(line,'##$GPY= (0..31)',32);    gpz     = GetToken(line,'##$GPZ= (0..31)',32);  	%%%%%% read acqu2 for td1	filename = [dirname filesep num2str(expno) filesep 'acqu2'];	 fid = fopen(filename,'r');	if (fid == -1)  		td1 = 1;	else				header = []; 		line = [];		[header, COUNT]  = fread(fid,inf,'uchar');		fclose(fid);				line = char(header)';		k = findstr(line, '##TITLE= Parameter file, TOPSPIN');		if(isempty(k))			fprintf(1,'This file is not in Bruker TOPSPIN format.\n');			return;		else			fprintf(1, ' acqu2.');				   % Find td		   td1 = GetToken(line,'##$TD=',1);	    	fprintf(1,'.TD1.');		end    end     	%%%%%% read acqu3 for td2	filename = [dirname filesep num2str(expno) filesep 'acqu3'];	 fid = fopen(filename,'r');	if (fid == -1)  		td2 = 1;	else				header = []; 		line = [];		[header, COUNT]  = fread(fid,inf,'uchar');		fclose(fid);				line = char(header)';		k = findstr(line, '##TITLE= Parameter file, TOPSPIN');		if(isempty(k))			fprintf(1,'This file is not in Bruker TOPSPIN format.\n');			return;		else			fprintf(1, ' acqu2.');				   % Find td           % if acqu3 exists, acqu2 contains td2 and acqu3 contains td1           td2=td1;		   td1 = GetToken(line,'##$TD=',1);	    	fprintf(1,'.TD2.');		end 	end 	%%%%%% read pulseprogram	filename = [dirname filesep num2str(expno) filesep 'pulseprogram'];	 fid = fopen(filename,'r');	if fid == -1		fprint(1,'no pulseprogram file');		ppg = '';	else		ppg = fgetl(fid);		ppg = ppg(6:end-1);		%[ppgpath ppg] = fileparts(ppg);		fclose(fid);	end	    % extra files of parameters	fid = fopen([dirname filesep num2str(expno) filesep 'vdlist'],'r');	if (fid == -1)  		vd = [];	else				fclose(fid);		curdirname = pwd;		cd ([dirname filesep num2str(expno) filesep]);		vd = load( 'vdlist','-ascii');		fprintf(1,'.vd.');		cd (curdirname);			end	fid = fopen([dirname filesep num2str(expno) filesep 'vplist'],'r');	if (fid == -1)  		vp = [];	else				fclose(fid);				curdirname = pwd;		cd ([dirname filesep num2str(expno) filesep]);		vp = load( 'vplist','-ascii');		fprintf(1,'.vp.');		cd (curdirname);	end    	fid = fopen([dirname filesep num2str(expno) filesep 'difflist'],'r');	if (fid == -1)  		difflist = [];	else				fclose(fid);				curdirname = pwd;		cd ([dirname filesep num2str(expno) filesep]);		difflist = load( 'difflist','-ascii');		fprintf(1,'.difflist.');		cd (curdirname);	end	                	% read the title file, if exist	fid = fopen([dirname filesep num2str(expno) filesep 'pdata' filesep '1' filesep 'title'],'r');	if (fid == -1)  		ftitle = [];	else				ftitle = fgetl(fid);		fclose(fid);	end		 %%%% read data binary file %%%% 	if td1 == 1		filename = [dirname filesep num2str(expno) filesep 'fid'];	%% 1d data	else		filename = [dirname filesep num2str(expno) filesep 'ser']; %% 2d data    end    if dataformat == 0  %unix        fid = fopen(filename,'r','b');	%data is always in big endian order.    else        if dataformat == 1        fid = fopen(filename,'r','l'); %little endian, linux, topspin        else        fprintf(1, 'Unknown data format: not xwin-nmr or topspin.');        return;        end    end    	if (fid == -1) fprintf(1, 'Error opening binary data file %s. Does it exist ??\n', filename);		fprintf(1, 'Exit with the output parameters set to empty.\n', filename); 		return; 		end;		 	fprintf(1,'.DATA.');	%filename	[A,COUNT] = fread(fid,inf,'int32');	% long interger	%COUNT    fclose(fid);    	data = [];	data = A(1:2:end-1) + 1i*A(2:2:end);	%td	%td1	data = reshape (data,td/2,td1,td2);		if nargout > 1		parameter.bf1 = bf1;		parameter.o1  = o1;		parameter.nbl = nbl;		parameter.ns = ns;		parameter.td = td;		parameter.td1 = td1;        parameter.td2 = td2;		parameter.dw = dw;		parameter.cnst = constants;		parameter.pulses = pulses;		parameter.delays = delays;        parameter.pl = pl;        parameter.gp = [gpx gpy gpz];		parameter.vd = vd;		parameter.vp = vp;		parameter.ppg  = ppg;		parameter.title = ftitle;		parameter.l = l;        parameter.difflist = difflist;	end	fprintf(1,'\n')%end   return%%%%%%%%%%%%function [value] = GetToken(string, matchstr, howmany)% find the token by its name and convert to its values.% specific for Bruker parameter files.% Find the variable	 k = findstr(string, matchstr);	 	if (~isempty(k) )			l = length(matchstr);            value = sscanf(string(k+l :end),'%g', howmany);	 endreturn